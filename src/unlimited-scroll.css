:root {
  --foreground-color: black;
  --background-color: white;
  color: var(--foreground-color);
  background-color: var(--background-color);
}
.title {
  font-size: 225%;
  font-weight: bold;
  font-family: Arial, Helvetica, sans-serif;
  text-align: center;
  margin-bottom: 0.5em;
  text-shadow: 0.1em 0.125em lightgray;
}
.heading,
.article {
  font-size: 150%;
  font-weight: bold;
  font-family: Arial, Helvetica, sans-serif;
}
.section {
  margin-top: 0.5em;
  font-size: 125%;
  font-style: italic;
  font-family: Arial, Helvetica, sans-serif;
}
body {
  display: flex;
  flex-direction: row;
  margin: 0;
  padding: 0;
  height: 100vh;
  width: 100vw;
  overflow-x: clip;
  overflow-y: auto;
  /* For the API docs:  This says how wide to make each column.
  This only takes effect when in horizontal scrolling mode.
  This can be set on the top level <div> of a scrolling container.
  This value should be appropriate for use in the width property of a <div>.
  This uses the normal variable inheritance rules, so I'm setting a default for the entire body here. */
  --phil-scroll-column-width: 20em;
}
#toc-independent {
  width: 15ch; /* This is a good default.  The web designer should be able to
  override this in any number of ways. */
  margin: 0.8em;
}
#main {
  flex-grow: 1;
  margin: 0.8em;
}
.toc-1 {
  font-size: 125%;
  font-weight: bold;
  font-family: Arial, Helvetica, sans-serif;
  display: block;
  margin-top: 0.5em;
}
.toc-1:first-child {
  margin-top: 0;
}
.toc-2 {
  font-style: italic;
  font-family: Arial, Helvetica, sans-serif;
  display: block;
  margin-top: 0.25em;
  margin-left: 0.8em;
}
.toc-selected {
  background-color: lightcyan;
}
.self-pointer {
  color: var(--foreground-color);
  background-color: var(--background-color);
  text-decoration: none;
}
.self-pointer:hover > ::after {
  content: "â€‡#";
}
@media (pointer: coarse) {
  button {
    font-size: 225%;
  }
}

div[data-phil-scroll-type="horizontal"] {
  position: relative;
  /*margin: 1em;*/
  overflow-x: scroll;
}

div[data-phil-scroll-type="horizontal"] > div {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: var(--phil-scroll-column-width);
  /* max-width is a way to keep the columns from being larger than the page.
     Right now that's the easy way.
     One issue is that I'm not getting the margin quite right.
     This might have to move to JavaScript.
     It's hard to test right now because the word Constitution is so long!
     TODO take another look. */
  max-width: calc(100% - 1.6em);
}

div[data-phil-scroll-type="horizontal"] > div > div {
  column-rule: #eee 0.2em solid;
  width: fit-content;
  height: 100%;
  max-height: 100%;
  overflow: visible;
  position: absolute;
  box-sizing: border-box;
  column-gap: 2em;
  column-count: 1;
}

div[data-phil-scroll-type="vertical"] > div > div {
  overflow-y: auto;
}
