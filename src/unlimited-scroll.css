:root {
  --foreground-color: black;
  --background-color: white;
  color: var(--foreground-color);
  background-color: var(--background-color);
}
.title {
  font-size: 225%;
  font-weight: bold;
  font-family: Arial, Helvetica, sans-serif;
  text-align: center;
  margin-bottom: 0.5em;
  text-shadow: 0.1em 0.125em lightgray;
}
.heading,
.article {
  font-size: 150%;
  font-weight: bold;
  font-family: Arial, Helvetica, sans-serif;
}
.section {
  margin-top: 0.5em;
  font-size: 125%;
  font-style: italic;
  font-family: Arial, Helvetica, sans-serif;
}
body {
  display: flex;
  flex-direction: row;
  margin: 0;
  padding: 0;
  height: 100vh;
  width: 100vw;
  overflow-x: clip;
  overflow-y: auto;
  /* For the API docs:  This says how wide to make each column.
  This only takes effect when in horizontal scrolling mode.
  This can be set on the top level <div> of a scrolling container.
  This value should be appropriate for use in the width property of a <div>.
  This uses the normal variable inheritance rules, so I'm setting a default for the entire body here. */
  /* This variable should probably go away.  The change between vertical
   * and horizontal scrolling is based on a container query.  And you
   * can't use a variable in that case.  So I have to manually keep these
   * values in sync. */
  --phil-scroll-column-width: 20em;
  background-color: #f8f7f8;
}
#toc-internal {
  margin-bottom: 1em;
}
#toc-independent {
  width: 15ch; /* This is a good default.  The web designer should be able to
  override this in any number of ways. */
  margin-top: 0.8em;
  margin-bottom: 0.8em;
  margin-left: 0.8em;
  margin-right: 0;
  flex-shrink: 0;
}
#main {
  flex-grow: 1;
  margin: 0.8em;
}
.toc-1 {
  font-size: 125%;
  font-weight: bold;
  font-family: Arial, Helvetica, sans-serif;
  display: block;
  margin-top: 0.5em;
}
.toc-1:first-child {
  margin-top: 0;
}
.toc-2 {
  font-style: italic;
  font-family: Arial, Helvetica, sans-serif;
  display: block;
  margin-top: 0.25em;
  margin-left: 0.8em;
}
.toc-selected {
  background-color: lightcyan;
}
/* A section title (e.g. <h1> or <h2>) is often an anchor that points to itself.
 * That way a user can click on a section title and the url field will update
 * to point to that line.  It makes it easy for a user to share a url pointing
 * to a specific <a>. */
.self-pointer {
  color: var(--foreground-color);
  background-color: var(--background-color);
  text-decoration: none;
}
.self-pointer:hover > ::after {
  content: "â€‡#";
}
@media (pointer: coarse) {
  button {
    font-size: 225%;
  }
}

div.phil-direction-scroll-container > div {
  background-color: white;
}

div.phil-direction-scroll-container > div p {
  text-align: justify;
  text-indent: 3ch;
  margin: 0.25em 0;
}

.phil-direction-scroll-container {
  container-type: size;
  container-name: phil-direction-scroll-container;
  overflow-y: auto;
}

@container phil-direction-scroll-container (width > 30em) {
  /* horizontal scrolling */

  div.phil-direction-scroll-container > div {
    position: relative;
    /*margin: 1em;*/
    overflow-x: scroll;
    height: 100%;
  }

  div.phil-direction-scroll-container > div > div {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    width: var(--phil-scroll-column-width);
  }

  div.phil-direction-scroll-container > div > div > div {
    column-rule: #f8f7f8 0.2em solid;
    width: fit-content;
    height: 100%;
    max-height: 100%;
    overflow: visible;
    position: absolute;
    box-sizing: border-box;
    column-gap: 2em;
    column-count: 1;
  }
}

@container phil-direction-scroll-container (width <= 30em) {
  /* vertical scrolling */

  /*
  div.phil-direction-scroll-container > div {
    overflow-y: scroll;
  }

  div.phil-direction-scroll-container > div > div > div {
    overflow-y: auto;
  }
*/
}

.phil-double-scroll-container {
  container-type: size;
  container-name: phil-double-scroll-container;
}

@container phil-double-scroll-container (width <= 32em) {
  /* allow-two-scrollbars="0" */
  /*
  p {
    font-family: cursive;
  } 
  */
  #twoScrollBars {
    display: none;
  }
  #toc-independent {
    display: none;
  }
}

[data-scrollbar-count="1"] #toc-independent {
  display: none;
}

@container phil-double-scroll-container (width > 32em) {
  /* allow-two-scrollbars="1" */
  /*
  p {
    text-decoration: magenta wavy underline;
  }
  */
  [data-scrollbar-count="2"] #toc-internal {
    display: none;
  }
}
